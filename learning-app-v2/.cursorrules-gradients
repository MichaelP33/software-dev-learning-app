# Gradient System Cursor Rules

## 🎨 **System Overview**

The Learning App V2 uses a **category-specific gradient system** to create visual consistency throughout the user's learning journey. Each of the 7 learning categories has its own gradient theme that's applied consistently across:

- **Card hover effects** (border and background overlays)
- **Progress bars** (all proficiency indicators)
- **Arrow indicators** (card navigation elements)
- **Page backgrounds** (topic and article pages)

### **Why This System Exists**
- **Visual Continuity**: Users see the same gradient family from category → topic → article
- **Brand Consistency**: Systematic approach creates professional polish
- **Maintainability**: Centralized gradient definitions in `src/lib/gradients.ts`
- **Scalability**: Easy to add new categories following established patterns

---

## 📊 **Quick Reference: Category → Gradient Mapping**

| Category | ID | Icon | Gradient Colors | Theme |
|----------|----|----|-----------------|-------|
| **Programming Fundamentals** | `programming-fundamentals` | 💻 | Blue → Cyan | `from-blue-500 to-cyan-500` |
| **Software Architecture & Design** | `software-architecture-design` | 🏗️ | Purple → Pink | `from-purple-500 to-pink-500` |
| **Development Process & Methodologies** | `development-process-methodologies` | ⚡ | Green → Emerald | `from-green-500 to-emerald-500` |
| **Tools & Development Environment** | `tools-development-environment` | 🔧 | Orange → Red | `from-orange-500 to-red-500` |
| **Data Management & APIs** | `data-management-apis` | 🗄️ | Indigo → Purple | `from-indigo-500 to-purple-500` |
| **Testing & Quality Assurance** | `testing-quality-assurance` | 🧪 | Teal → Cyan | `from-teal-500 to-cyan-500` |
| **Deployment & Operations (DevOps)** | `deployment-operations-devops` | 🚀 | Rose → Pink | `from-rose-500 to-pink-500` |

---

## 🔧 **Function Guide**

All gradient functions are imported from `@/lib/gradients`. Here's when to use each:

### **Primary Functions**
```typescript
import { 
  getCategoryPrimaryGradient,
  getCategoryAccentGradient, 
  getCategoryHoverGradient,
  getCategoryBackground 
} from '@/lib/gradients'
```

| Function | Use Case | Example |
|----------|----------|---------|
| `getCategoryPrimaryGradient(categoryId)` | Progress bars, main elements | `className={bg-gradient-to-r ${getCategoryPrimaryGradient(category.id)}}` |
| `getCategoryAccentGradient(categoryId)` | Arrow buttons, small accents | `className={bg-gradient-to-r ${getCategoryAccentGradient(category.id)}}` |
| `getCategoryHoverGradient(categoryId)` | Hover states (slightly more intense) | Used internally by CursorInspiredCard |
| `getCategoryBackground(categoryId)` | Page backgrounds (very subtle) | `className={bg-gradient-to-r ${getCategoryBackground(category.id)}}` |

### **Utility Functions**
```typescript
// Check if category has gradient theme
hasCategoryGradient(categoryId: string): boolean

// Get complete theme object
getCategoryGradient(categoryId: string): GradientTheme | null

// Fallback for non-category contexts
getGradientByIndex(index: number): string
```

---

## 🏗️ **Implementation Patterns**

### **Card Components with Category Gradients**

#### **Pattern 1: Category/Topic Cards**
```typescript
// ✅ CORRECT: Pass categoryId to enable category-specific gradients
export function CategoryCardClient({ category, ... }: CategoryCardClientProps) {
  const progressGradient = getCategoryPrimaryGradient(category.id)
  const arrowGradient = getCategoryAccentGradient(category.id)
  
  return (
    <CursorInspiredCard categoryId={category.id}>
      {/* Progress bar */}
      <AnimatedProgressBar 
        percentage={completionPercentage}
        gradient={progressGradient}
      />
      
      {/* Arrow indicator */}
      <div className={`w-8 h-8 rounded-full bg-gradient-to-r ${arrowGradient}`}>
        {/* arrow icon */}
      </div>
    </CursorInspiredCard>
  )
}
```

#### **Pattern 2: Topic Cards (nested in categories)**
```typescript
// ✅ CORRECT: Pass categoryId down from parent category
export function TopicCardClient({ topic, categoryId, ... }: TopicCardClientProps) {
  const progressGradient = getCategoryPrimaryGradient(categoryId)
  const arrowGradient = getCategoryAccentGradient(categoryId)
  
  return (
    <CursorInspiredCard categoryId={categoryId}>
      {/* Same pattern as category cards */}
    </CursorInspiredCard>
  )
}
```

### **Page Background Patterns**

#### **Topic and Article Pages**
```typescript
// ✅ CORRECT: Use subtle background gradient for entire page
export default function TopicPage({ params }: TopicPageProps) {
  const topic = getTopicById(topicId)
  const category = findCategoryByTopicId(topicId)
  
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
      {/* Category-specific background overlay */}
      <div className={`absolute inset-0 bg-gradient-to-r ${category ? getCategoryBackground(category.id) : 'from-slate-50/80 via-white/40 to-slate-50/80'}`} />
      
      {/* Page content */}
    </div>
  )
}
```

### **Progress Bar Patterns**

#### **All Progress Bars Should Use Category Gradients**
```typescript
// ✅ CORRECT: Category-specific progress bars
<div className={`h-3 rounded-full bg-gradient-to-r ${category ? getCategoryPrimaryGradient(category.id) : 'from-blue-500 to-cyan-500'}`} />

// ❌ INCORRECT: Random or hardcoded gradients
<div className="h-3 rounded-full bg-gradient-to-r from-purple-500 to-pink-500" />
```

---

## ➕ **Adding New Categories**

When adding a new learning category, follow these steps:

### **Step 1: Add to Data Structure**
```json
// In learning-content.json
{
  "id": "new-category-id",
  "name": "New Category Name", 
  "description": "Category description",
  "icon": "🎯",
  "color": "from-emerald-500 to-teal-500", // Choose unique gradient
  "topics": [...]
}
```

### **Step 2: Add to Gradient System**
```typescript
// In src/lib/gradients.ts, add to CATEGORY_GRADIENTS
'new-category-id': {
  primary: 'from-emerald-500 to-teal-500',
  hover: 'from-emerald-600 to-teal-600', 
  background: 'from-emerald-50/80 via-teal-50/40 to-emerald-50/80 dark:from-emerald-900/20 dark:via-teal-900/10 dark:to-emerald-900/20',
  accent: 'from-emerald-400 to-teal-400',
  shadow: 'rgba(16, 185, 129, 0.3)' // Use primary color with 0.3 opacity
}
```

### **Step 3: Test Gradient Consistency**
1. **Home page**: Category card should use new gradient
2. **Category page**: All topic cards should use same gradient family  
3. **Topic page**: Background and progress bars should match
4. **Article page**: Background and progress bars should match

### **Step 4: Update This Documentation**
Add the new category to the Quick Reference table above.

---

## 🚨 **Troubleshooting**

### **Common Issues**

#### **"Gradient not working" / Using fallback colors**
**Cause**: Category ID mismatch between data and gradient system
```typescript
// ❌ Check: Does category ID exist in CATEGORY_GRADIENTS?
console.log(hasCategoryGradient(category.id)) // Should be true

// ✅ Fix: Ensure exact ID match in src/lib/gradients.ts
```

#### **"Cards showing multi-color rainbow gradient instead of category gradient"**
**Cause**: `categoryId` prop not passed to CursorInspiredCard
```typescript
// ❌ INCORRECT: Missing categoryId
<CursorInspiredCard>

// ✅ CORRECT: Pass categoryId
<CursorInspiredCard categoryId={category.id}>
```

#### **"Progress bars using wrong gradients"**
**Cause**: Using hardcoded gradients instead of category functions
```typescript
// ❌ INCORRECT: Hardcoded
gradient="from-purple-500 to-pink-500"

// ✅ CORRECT: Category-specific
gradient={getCategoryPrimaryGradient(category.id)}
```

#### **"Server errors / ENOENT issues after gradient changes"**
**Cause**: Next.js cache corruption
```bash
# ✅ Fix: Clear cache and restart
cd learning-app-v2
rm -rf .next
npm run dev
```

### **Debugging Tips**

1. **Check category ID**: `console.log('Category ID:', category.id)`
2. **Verify gradient exists**: `console.log('Has gradient:', hasCategoryGradient(category.id))`
3. **Test gradient output**: `console.log('Gradient:', getCategoryPrimaryGradient(category.id))`

---

## 📁 **File Structure**

```
learning-app-v2/
├── src/lib/gradients.ts              # 🎨 Main gradient system
├── src/components/
│   ├── cursor-inspired-card.tsx      # Card hover effects
│   ├── category-card-client.tsx      # Category cards
│   ├── topic-card-client.tsx         # Topic cards  
│   └── animated-card.tsx             # Progress bars
├── src/app/
│   ├── category/[categoryId]/page.tsx # Category pages
│   ├── topic/[topicId]/page.tsx      # Topic pages
│   └── article/[articleId]/page.tsx  # Article pages
└── data/learning-content.json        # Category definitions
```

---

## 🎯 **Quick Commands for Non-Technical Users**

### **Ask Mode Queries**
- *"How do I check what gradient a category uses?"*
- *"Show me how to add gradients to a new component"*
- *"Why isn't my category showing the right colors?"*
- *"How do I add a new learning category with gradients?"*

### **Common Tasks**
- **Change a category's colors**: Update `CATEGORY_GRADIENTS` in `src/lib/gradients.ts`
- **Add new category**: Follow "Adding New Categories" section above
- **Fix gradient issues**: Check "Troubleshooting" section above

---

**Last Updated**: December 2024  
**Next Review**: When adding new categories or gradient features